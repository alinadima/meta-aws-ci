version: 0.2
run-as: yoctouser

env:
  shell: bash

phases:
  pre_build:
    run-as: root
    commands:
      - chown -R yoctouser /sstate-cache
      - chown -R yoctouser /downloads
      - chown yoctouser /build-output
      - chmod 755 /sstate-cache
      - chmod 755 /downloads
      - chmod 755 /build-output
      # Maybe not needed?
      - find /sstate-cache -atime +30 -delete
      - find /downloads -atime +30 -delete
  build:
    commands:
# submodule approach
     - git submodule update --init --recursive
# repo tool approach
#      - repo init -u file://$(pwd) -b main -m qemu.xml && repo sync
# kas approach wip
#      - kas checkout kas.yml
     - echo Build started on `date`
     - . ./init-build-env $TMP_DIR
     - BUILD_DEVICE=agl-nxp-goldbox bitbake aws-biga-image
     - BUILD_DEVICE=agl-nxp-goldbox bitbake aws-biga-image -c populate_sdk
# not necessary yet
#      - BUILD_DEVICE=qemu bitbake -c testexport core-image-minimal
  post_build:
    commands:
      - echo Build completed on `date`
      - bitbake -m
      - ps aux | grep bitbake
      - find $TMP_DIR -name '*.socket' -delete
      - export BUILD_OUTPUT="$(uuidgen -t).tar"
      - tar cf $BUILD_OUTPUT -C $TMP_DIR tmp
      - cp -r $BUILD_OUTPUT /build-output
      - echo $BUILD_OUTPUT > /build-output/tmpfile

artifacts:
  files:
    - /build-output/tmpfile
